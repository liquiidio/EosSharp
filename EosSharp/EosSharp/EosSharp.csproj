<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
	  <TargetFramework>netcoreapp3.1</TargetFramework>
	  <LangVersion>8.0</LangVersion>
	  <DebugType>Portable</DebugType>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <Description>C# client library for EOSIO blockchains. The library is based on https://github.com/EOSIO/eosjs and MIT licensed.</Description>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageTags>Liquiid.io, EosSharp</PackageTags>
    <Authors>Liquiid.io</Authors>
    <Company>Liquiid.io</Company>
    <Product>Liquiid.io</Product>
    <PackageId>Liquiid.io.EosSharp</PackageId>
    <AssemblyName>EosSharp</AssemblyName>
    <RootNamespace>EosSharp</RootNamespace>
    <RepositoryUrl>https://github.com/liquiidio/EosSharp-Private</RepositoryUrl>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Cryptography.ECDSA.Secp256K1" Version="1.1.2" />
    <PackageReference Include="Newtonsoft.Json" Version="12.0.1" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\EosSharp.Core\EosSharp.Core.csproj" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\..\README.md" Pack="true" PackagePath="" />
  </ItemGroup>
  
  <!--
    The following solves the problem that 'dotnet pack' does not include the DLLs from referenced projects.
    See https://github.com/NuGet/Home/issues/3891 for a description of the problem
    and for newer versions / workarounds / built-in methods.
  -->
  <PropertyGroup>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
    <!-- include PDBs in the NuGet package -->
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>
  
  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="ResolveReferences">
    <ItemGroup>
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference'))" />
    </ItemGroup>
  </Target>

</Project>
