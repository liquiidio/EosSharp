name: Deploy

on: [push]

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        dotnet-version: ['3.0', '3.1.x', '5.0.x', '6.0.x', '7.0.x']
    name: Build and test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: master
          fetch-depth: 0
      - name: Setup .NET SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Install dependencies
        run: dotnet restore ./EosSharp/EosSharp/EosSharp.csproj
      - name: Build
        run: dotnet build ./EosSharp/EosSharp/EosSharp.csproj --configuration Release --no-restore
      - name: Test
        run: dotnet test ./EosSharp/EosSharp.Tests/EosSharp.UnitTests.csproj --no-build --configuration Release --verbosity normal --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v3
        with:
          name: dotnet-results-${{ matrix.dotnet-version }}
          path: TestResults-${{ matrix.dotnet-version }}
        if: ${{ always() }} # Use always() to always run this step to publish test results when there are test failures

  pack-nuget:
    needs: build
    runs-on: ubuntu-20.04
    name: Dotnet Pack
    if: github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: master
          fetch-depth: 0
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 3.1.x
      - name: Determine version
        run: echo "VERSION=$(git describe --tags --dirty)" >> $GITHUB_ENV
      - name: Pack
        run: dotnet pack ./EosSharp/EosSharp/EosSharp.csproj --output ./artifacts --configuration Release -p:Version=$VERSION
      - name: Upload package
        uses: actions/upload-artifact@v1
        with:
          name: artifacts
          path: ./artifacts